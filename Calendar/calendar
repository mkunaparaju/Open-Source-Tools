#!/bin/bash


TITLE=""
DURATION=""
EVENTSTART=""
EVENTEND=""

USER_HOME="$HOME"

DIR="$USER_HOME/.calendar"

function error_exit
{
	echo "$1" 1>&2
	exit 1
}

if  [[ $# -gt 4  ]]; then
         {
                 error_exit "Invlid number of arguments"
         }
fi 


if [ "$1" == "create" ]; then
{

	if  [[ $# -lt 2  ]]; then
	{	
		error_exit "Invlid number of arguments"
	}
	fi
 	

	if [ "$2" != "" ]; then
	{
	
			EVENTSTART=$(date --date="$2" "+%s" 2> /dev/null) 
			ERR=$?
			if [ $ERR != 0 ]; then
			{
				error_exit "Invalid date"
			}
			fi 
 			#echo $EVENTSTART
	}
	else
	{
		error_exit "Please Provide Date"	
	}
	fi

	if  [ "$3" != "" ]; then
	{
		if [ "$3" -gt 0 ]; then 
		{
			DURATION=$3
			SECDURATION=$(($3*60))
			EVENTEND=$(($EVENTSTART+$SECDURATION ))
			#echo $EVENTEND
		}
		else 
		{
			error_exit "Please provide a positive duration"
		}
		fi		
	}
	else
	{
		error_exit "Please provide duration"	
	}
	fi
	if [ "$4" != "" ]; then
	{
		TITLE="$4"
		#echo $TITLE	
	}
	else
	{
		echo -n "Enter title of the event  > "
		read TITLE
		#read -p "Enter title of the event > " $TITLE
		#echo $TITLE
		if [ "$TITLE" == "" ]; then 
		{
			error_exit "Title is required. Please Provide Title"
		}
		fi	
	}
	fi


	DESCRIPTION=$(cat)
	#DESCRIPTION=$(sed '/^$/q') 
	#echo $DESCRIPTION

if [ ! -d $DIR ]; then
{
        mkdir $DIR
       # echo "dir made"
       # echo $DIR
}
fi

	if [ ! -f $DIR/$EVENTSTART ]; then
	{
		echo -e $DURATION >> $DIR/$EVENTSTART 
		echo -e $TITLE >> $DIR/$EVENTSTART
 		echo -e "$DESCRIPTION" >> $DIR/$EVENTSTART
		#printf $DESCRIPTION >> $DIR/$EVENTSTART
		chmod 777 $DIR/$EVENTSTART
		echo "$EVENTSTART"	
		exit 0
	}
	else
	{
		error_exit "Event Already exists at that time"
	}
	fi 
}
elif [ $1 == "delete" ]; then
{

 if  [[ $# -lt 2  ]]; then
        {
                error_exit "Invlid number of arguments"
        }
        fi

if [ ! -d $DIR ]; then
{
	echo ".calendar directory is not avialable"
	exit 2
}
fi

	if [ -f $DIR/$2 ]; then
	{
		rm $DIR/$2
		echo "delelted file "
		exit 0
	}	
	else
	{
		error_exit "file does not exist"
	}
	fi	
	
}

elif [ $1 == "show" ]; then
{
if  [[ $# -lt 1  ]]; then
        {
                error_exit "Invlid number of arguments"
        }
        fi

if [ ! -d $DIR ]; then
{
        echo ".calendar directory is not avialable"
        exit 2
}
fi

	if [ -f $DIR/$2 ]; then
	{
		STARTTIME=$(date -d @$2 2> /dev/null)
                        ERR=$?
                        if [ $ERR != 0 ]; then
                        {
                                error_exit "Invalid start date"
                        }
                        fi
		DURAT=$(awk 'NR==1' $DIR/$2)
	#	SECDURAT=$(())
		NEWTITLE=$(awk 'NR==2' $DIR/$2)
		NEWDESC=$(cat $DIR/$2 | sed -n '3,$p')  #$(awk 'NR>=3' $DIR/$2)
		ENDTIMEEPOCH=$((($DURAT*60)+$2))
		ENDTIME=$(date -d @$ENDTIMEEPOCH 2> /dev/null)
                        ERR=$?
                        if [ $ERR != 0 ]; then
                        {
                                error_exit "Invalid end date"
                        }
                        fi
		
	#	echo $ENDTIMEEPOCH
	#	echo "$2"
		if [ ! $3 ]; then
		{
			echo $STARTTIME to $ENDTIME
			echo $NEWTITLE
			echo $NEWDESC 
			exit 0
		}
		elif [ $3 == "title" ]; then
		{
			echo $NEWTITLE
			exit 0 
		}	
		elif [ $3 == "time" ]; then
		{
			echo $STARTTIME to $ENDTIME
			exit 0
		}
		elif [ $3 == "description" ]; then
		{
			echo $NEWDESC
			exit 0
		}
		else	
		{
			error_exit "Please provide correct option to display"
		}
		fi
	}
	else
	{
		error_exit "the file does not exist"
	}
	fi
}		
elif [ $1 == "link" ]; then
{


if  [[ $# -lt 2  ]]; then
         {
                 error_exit "Invlid number of arguments"
        }
        fi
if [ ! -d $DIR ]; then
{
        mkdir $DIR
     #   echo "dir made"
      #  echo $DIR
}
fi

	LINKROOT="/home/$2"
    	if [ ! -d $LINKROOT ]; then
	{
		error_exit "the specified user does not exist"
	}
	else
	{	
		if [ ! -d $LINKROOT/.calendar ]; then
		{ 
			
			error_exit "The specified user's calendar does not exist"
		}
		fi		
			 
		FILEROOT=$LINKROOT/.calendar/$3
		#echo $FILEROOT
		if [ ! -f $FILEROOT ]; then
		{
	 		 error_exit "specified event does not exist"
					
		}
		else
		{
			ln -s $FILEROOT $DIR
                        echo "event linked"
			exit 0
		}
		fi		
}
	fi		
}
elif [ $1 == "export" ]; then
{

if  [[ $# -lt 2  ]]; then
        {
                error_exit "Invlid number of arguments"
        }
        fi

	EXPORTUSERDIR="/home/$2/.calendar/"
	if [ ! -d $EXPORTUSERDIR ]; then
	{
       		echo ".calendar directory is not avialable"
        	exit 2
	}
	fi

	BEGINTIME=$(date --date="$3" "+%s" 2> /dev/null)
                        ERR=$?
                        if [ $ERR != 0 ]; then
                        {
                                error_exit "Invalid begin  date"
                        }
                        fi
	FINISHTIME=$(date --date="$4" "+%s" 2> /dev/null) 
                        ERR=$?
                        if [ $ERR != 0 ]; then
                        {
                                error_exit "Invalid finish date"
                        }
                        fi
	FILES=$(find $EXPORTUSERDIR -type f |cut -d'/' -f5 )
	SYMBOLICFILES=$(find $EXPORTUSERDIR -type l | cut -d'/' -f5)
	#echo $FILES
	#echo $SYMBOLICFILES
	
	if [ "$FILES" != "" ]; then
	{
		echo "BEGIN:VCALENDAR"
		echo "VERSION:2.0"
        	echo "PRODID:-//Open Source Tools//Calendar for $2//EN"
		for k in $FILES
         	{
			KTITLE=$(awk 'NR==2' $EXPORTUSERDIR/$k)
  			KDUR=$(awk 'NR==1' $EXPORTUSERDIR/$k)
			KDESCRIPTION=$(awk 'NR>=3' $EXPORTUSERDIR/$k)
                	if [[ $k -ge "$BEGINTIME" && $k -le "FINISHTIME" ]]; then
                	{	
				echo "BEGIN:VEVENT"
				echo "UID:$2_$k"
				echo "DTSTAMP:$(($k))Z"
				echo "ORGANIZER;CN=$2:MAILTO:$USER@cims.nyu.edu"
				echo "DTSTART:$(($k))Z"
				echo "DTEND:$(($k + 60 * $KDUR))Z"
				echo "SUMMARY:$KTITLE"
				echo "DESCRIPTION:$KDESCRIPTION"
				echo "END:VEVENT"
         		}
              		fi
         	}
	       	for s in $SYMBOLICFILES
                {
                 	 KSYMTITLE=$(awk 'NR==2' $EXPORTUSERDIR/$s)
			 KDUR=$(awk 'NR==1' $EXPORTUSERDIR/$s)
			 KSYMDESCRIPTION=$(awk 'NR>=3' $EXPORTUSERDIR/$s)
                     if [[ $s -ge "$BEGINTIME" && $s -le "FINISHTIME" ]]; then
                         {
                                 echo "BEGIN:VEVENT"
                                 echo "UID:$2_$s"
                                 echo "DTSTAMP:$(($s))Z"
                                 echo "ORGANIZER;CN=$2:MAILTO:$USER@cims.nyu.edu"
                                 echo "DTSTART:$(($s))Z"
                                 echo "DTEND:$(($s + 60 * $KDUR))Z"
                                 echo "SUMMARY:$KSYMTITLE"
                                 echo "DESCRIPTION:$KSYMDESCRIPTION"
                                 echo "END:VEVENT"
                         }
                         fi
                 }


		echo "END:VCALENDAR"
	}
	else
	{
		echo "There are no events in this duration to export"
		exit 0
	}
	fi
		
}
else
{
	error_exit "option not found. use create, show, delete, link and export options only"	
}

fi
